#!/usr/bin/env bash

########################################################
# Build Sage source distribution
# This script should be called by the spkg/bin/sage script
########################################################

set -e

CMD="${0##*/}"

die () {
    echo >&2 -e "$@"
    exit 1
}

usage () {
    echo "usage: $CMD [TMP_DIR]"
}

if [ $# -gt 1 ]; then
    usage
    die
fi

if [ -z "$SAGE_ROOT" ]; then
    die "must be run from within a Sage enviroment, or with SAGE_ROOT provided"
fi

if [ -z "$SAGE_SRC" ]; then
    die "must be run from within a Sage enviroment, or with SAGE_SRC provided"
fi

if [ "$#" -gt 1 ]; then
    TMP_DIR="$2"
else
    TMP_DIR="$SAGE_ROOT/tmp"
fi

source "$SAGE_SRC/bin/sage-version.sh"
echo "Sage version $SAGE_VERSION, release date $SAGE_RELEASE_DATE"

TARGET="sage-$SAGE_VERSION"

rm -rf "$TMP_DIR/$TARGET"
mkdir -p "$TMP_DIR/$TARGET"

git clone "$SAGE_ROOT" "$TMP_DIR/$TARGET"
cd "$TMP_DIR/$TARGET"
git remote set-url origin "$SAGE_REPO_ANONYMOUS"

# Download and copy all upstream tarballs (the -B option to make forces
# all targets to be built unconditionally)
cd "$SAGE_ROOT/build"
SAGE_INSTALL_GCC=yes SAGE_SPKG_OPTS="-f -d" SAGE_SPKG_COPY_UPSTREAM="$TMP_DIR/$TARGET/upstream" ./install -B all

# save space
cd "$TMP_DIR/$TARGET"
git prune

cd "$TMP_DIR"

echo "Creating $TARGET.tar.gz ..."
tar zcf "$TARGET".tar.gz "$TARGET"

mkdir -p "$SAGE_ROOT"/dist

rm -rf "$SAGE_ROOT/dist/$TARGET"

echo "Moving final distribution file to $SAGE_ROOT/dist"

mv "$TARGET" "$SAGE_ROOT"/dist/
mv "$TARGET".* "$SAGE_ROOT"/dist/
